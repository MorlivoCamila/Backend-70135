paths: 
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags: 
        - Users
      responses: 
        "200":
          description: 'Los usuarios fueron obtenidos correctamente'
          content: 
            applications/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Users'
    post:
      summary: Crea un usuario nuevo
      tags: 
        - Users
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/requestBodies/updateUser'
      responses: 
        '201':
          description: El usuario fué creado correctamente
  /api/users/67a3b9e70c3ae2e84a055657:
    get:
      summary: Obtiene un usuario por ID
      tags: 
        - Users
      responses: 
        "200":
          description: 'El usuario fue obtenido correctamente'
          content: 
            applications/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/Users'
  /api/users/67a3b9e70c3ae2e84a055654:
    put:
      summary: Actualiza un usuario por ID
      tags: 
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/updateUser'
            example:
              role: admin
      responses: 
        '201':
          description: El usuario fue actualizado correctamente     
  /api/users/67a42ee8f2b73e210efe7c38:
    delete:
      summary: Elimina un usuario por ID
      tags: 
        - Users
      responses: 
        "200":
          description: 'El usuario fue eliminado correctamente'
          content: 
            applications/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/Users'

components:
  schemas: 
    Users: 
      type: object
      properties: 
        _id: 
          type: string
          description: Id autogenerado por Mongo
        role: 
          type: string
          description: Rol del usuario
        password: 
          type: string
          description: Contraseña del usuario
        pets:
          type: array
          description: Mascotas adoptadas por el usuario
      example: 
        _id: ObjectId('67a42cd42480b0528f797854')
        password: $2b$10$BjnhVZGkZm1AV2f3V23vXubhU2b5ktjmaxlIF8qvmMGe9AoFkd2u6
        role: admin
        pets: 
          id: 9cb8cd39ac024c0ce8a12d6e
          type: Cat
          name: Coco
          adopted: false
          owner:

  requestBodies: 
    updateUser: 
      type: object
      properties: 
        first_name: 
          type: string
          description: Nombre del usario
        last_name: 
          type: string
          description: Apellido del usuario
        email: 
          type: string
          description: Email del usuario
        password: 
          type: string
          description: Contraseña del usuario
      example: 
        _id: ObjectId('67a42cd42480b0528f797854')
        password: $2b$10$BjnhVZGkZm1AV2f3V23vXubhU2b5ktjmaxlIF8qvmMGe9AoFkd2u6
        role: admin
        pets: 
          id: 9cb8cd39ac024c0ce8a12d6e
          type: Cat
          name: Coco
          adopted: false
          owner: 
        